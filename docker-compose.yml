services:
  app:
    build: .
    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./ap-southeast-1-bundle.pem:/home/ubuntu/ap-southeast-1-bundle.pem
    environment:
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PARAMS: ${DB_PARAMS}
      JWT_SECRET: ${JWT_SECRET}
      BCRYPT_SALT: ${BCRYPT_SALT}
      S3_ID: ${S3_ID}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      S3_REGION: ${S3_REGION}
      ENV: ${ENV}
  prometheus:
    image: prom/prometheus:v2.50.0
    ports:
      - 9090:9090
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      # tell the prometheus to use `/etc/prometheus/prometheus.yml`
      - '--config.file=/etc/prometheus/prometheus.yml'
      # tell the prometheus to use `/prometheus` as the storage path
      - '--storage.tsdb.path=/prometheus'
      # tell prometheus to reload if we hit `http://localhost:9090/-/reload` to reload changes in `./prometheus.yml`
      - '--web.enable-lifecycle'
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - grafana_data:/var/lib/grafana
      # • `grafana_data` refers to `volumes.grafana_data` used to make grafana information presists each restart
      # •  `/var/lib/grafana` refers to where should `volumes.grafana_data` will be placed inside the grafana container
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      # • `./grafana/datasources` refers to `grafana` folder in host, push the folder in the repository
      #    to retain the config and keeping the panels that already created and deploy it everywhere
      # • `/etc/grafana/provisioning/datasources` refers to where should `grafana` will be placed inside the grafana container    environment:
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
volumes:
  db:
    driver: local
  prometheus-data:
  grafana_data:
